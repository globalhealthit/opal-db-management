# SPDX-FileCopyrightText: Copyright (C) 2021 Opal Health Informatics Group at the Research Institute of the McGill University Health Centre <john.kildea@mcgill.ca>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

services:
  db:
    restart: always
    image: mariadb:10.11.13-jammy
    ports:
      - ${MARIADB_EXTERNAL_PORT}:3306
    volumes:
      - ./db-scripts:/docker-entrypoint-initdb.d
      - ./config/mariadb.cnf:/etc/mysql/conf.d/opal.cnf
      - mariadbdata:/var/lib/mysql
    environment:
      - MARIADB_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
      - MARIADB_USER=${DATABASE_USER}
      - MARIADB_PASSWORD=${DATABASE_PASSWORD}
      - TZ=EST5EDT

  adminer:
    restart: always
    image: adminer:5.3.0-standalone
    depends_on:
      - db
    expose:
      - "8080"
    env_file:
      - .env

  app:
    restart: always
    build:
      context: .
    volumes:
      - ./certs:/certs
      - ./alembic.ini:/app/alembic.ini
      - ./db_management:/app/db_management
    depends_on:
      - db
      # TODO: Enable a health check on db container before alembic runs to fix
      #       "Can't connect to MySQL server on 'db' (115)" error thrown by alembic.
      #       This error occurs when alembic tries to run before db is finished creating the dbs.
      #       If the error is encountered, simply re-start the containers a second time and alembic will work.
    env_file:
      - .env
     # Upgrade legacy dbs with alembic
    command: /app/alembic-upgrade.sh
  
  nginx:
    env_file:
      - .env
    container_name: nginx
    build:
      context: ./nginx
      args:
        NGINX_CONF: nginx_ec2.conf
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/www/.well-known/acme-challenge:/var/www/.well-known/acme-challenge
      - /etc/letsencrypt/live/opaldb.shoprideon.com/fullchain.pem:/etc/ssl/certs/fullchain.pem
      - /etc/letsencrypt/live/opaldb.shoprideon.com/privkey.pem:/etc/ssl/private/privkey.pem
    depends_on:
      - adminer

volumes:
  mariadbdata: {}
